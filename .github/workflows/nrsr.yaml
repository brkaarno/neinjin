name: not-rocket-science

on:
  push:
    branches: [ "test/**", "with-c2rust" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  not-rocket-science-checks:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          workspaces: c2rust

      - name: Extract OCaml Cache Key
        id: extract
        run: echo "ocaml_key=$(python3 cli/constants.py ocaml-cache-key)" >> $GITHUB_OUTPUT

      # We don't use setup-ocaml because it would compile OCaml in the runner's
      # environment, which has libraries that aren't available to the 10j toolchain.
      # Thus, when our provisioning process would try to compile dune, it would fail.
      # This action restores a previous cache, if we have one, and populates the cache
      # if the workflow succeeds.
      # XREF:ci-opam-paths
      - name: Cache OCaml
        id: cache-ocaml
        uses: actions/cache@v4
        with:
          path: |
            ~/.opam
            ~/.local/bin/opam
          key: ${{ steps.extract.outputs.ocaml_key }}
          
      - name: Provision dependencies
        run: sh cli/sh/provision.sh

      - name: Health check
        run: cli/10j status

      - name: Ensure no large files were accidentally added
        run: cli/10j check-repo-file-sizes

      - name: Code linting and formatting checks
        run: cli/10j check-star

      - name: Build c2rust
        run: |
          export XJ_SHOW_CMDS=1
          cd c2rust
          ../cli/10j cargo +stable build --verbose -p c2rust -p c2rust-transpile
